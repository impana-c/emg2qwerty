hydra:
  run:
    dir: logs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: ${hydra.run.dir}
    subdir: job${hydra.job.num}_${hydra.job.override_dirname}
  launcher:
    submitit_folder: ${hydra.run.dir}/submitit_logs/%j
    timeout_min: 2880
    cpus_per_task: null
    gpus_per_node: ${trainer.devices}
    tasks_per_node: 1
    mem_gb: null
    nodes: ${trainer.num_nodes}
    name: ${hydra.job.name}
    stderr_to_stdout: false
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.LocalLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: hydra_configs
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - user=single_user
    - trainer.accelerator=gpu
    - trainer.devices=3
  job:
    name: emg2qwerty
    chdir: null
    override_dirname: trainer.devices=3,user=single_user
    id: ???
    num: ???
    config_name: base
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys:
        - checkpoint
        - cluster
        - trainer.accelerator
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/bkwan27/emg2qwerty
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/bkwan27/emg2qwerty/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      cluster: local
      decoder: ctc_greedy
      lr_scheduler: linear_warmup_cosine_annealing
      optimizer: adam
      model: tds_conv_ctc
      transforms: log_spectrogram
      user: single_user
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: submitit_local
      hydra/output: default
  verbose: false
user: single_user
dataset:
  train:
  - user: 89335547
    session: 2021-06-03-1622765527-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-02-1622681518-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-04-1622863166-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-07-22-1627003020-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-07-21-1626916256-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-07-22-1627004019-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-05-1622885888-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-02-1622679967-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-03-1622764398-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-07-21-1626917264-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-05-1622889105-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-03-1622766673-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-06-04-1622861066-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  - user: 89335547
    session: 2021-07-22-1627001995-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  val:
  - user: 89335547
    session: 2021-06-04-1622862148-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  test:
  - user: 89335547
    session: 2021-06-02-1622682789-keystrokes-dca-study@1-0efbe614-9ae6-4131-9192-4398359b4f5f
  root: ${hydra:runtime.cwd}/data
to_tensor:
  _target_: emg2qwerty.transforms.ToTensor
  fields:
  - emg_left
  - emg_right
band_rotation:
  _target_: emg2qwerty.transforms.ForEach
  transform:
    _target_: emg2qwerty.transforms.RandomBandRotation
    offsets:
    - -1
    - 0
    - 1
temporal_jitter:
  _target_: emg2qwerty.transforms.TemporalAlignmentJitter
  max_offset: 120
logspec:
  _target_: emg2qwerty.transforms.LogSpectrogram
  n_fft: 64
  hop_length: 16
specaug:
  _target_: emg2qwerty.transforms.SpecAugment
  n_time_masks: 3
  time_mask_param: 25
  n_freq_masks: 2
  freq_mask_param: 4
  mean: 0
  std: 0.05
transforms:
  train:
  - ${to_tensor}
  - ${band_rotation}
  - ${temporal_jitter}
  - ${logspec}
  - ${specaug}
  val:
  - ${to_tensor}
  - ${logspec}
  test: ${transforms.val}
module:
  _target_: emg2qwerty.lightning.TDSConvCTCModule
  in_features: 528
  mlp_features:
  - 384
  block_channels:
  - 24
  - 24
  - 24
  - 24
  kernel_width: 32
datamodule:
  _target_: emg2qwerty.lightning.WindowedEMGDataModule
  window_length: 8000
  padding:
  - 1800
  - 200
optimizer:
  _target_: torch.optim.Adam
  lr: 0.001
lr_scheduler:
  scheduler:
    _target_: pl_bolts.optimizers.lr_scheduler.LinearWarmupCosineAnnealingLR
    warmup_epochs: 10
    max_epochs: ${trainer.max_epochs}
    warmup_start_lr: 1.0e-08
    eta_min: 1.0e-06
  interval: epoch
decoder:
  _target_: emg2qwerty.decoder.CTCGreedyDecoder
seed: 1501
batch_size: 32
num_workers: 4
train: true
checkpoint: null
monitor_metric: val/CER
monitor_mode: min
trainer:
  accelerator: gpu
  devices: 3
  num_nodes: 1
  max_epochs: 150
  default_root_dir: ${hydra:runtime.output_dir}
callbacks:
- _target_: pytorch_lightning.callbacks.LearningRateMonitor
- _target_: pytorch_lightning.callbacks.ModelCheckpoint
  dirpath: ${hydra:runtime.output_dir}/checkpoints
  monitor: ${monitor_metric}
  mode: ${monitor_mode}
  save_last: true
  verbose: true
